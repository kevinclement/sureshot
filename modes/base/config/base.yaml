#config_version=5
##! mode: base
mode:
  start_events: ball_started
  priority: 100

variable_player:
  # NOTE: Most of these shots can be grouped or using tags, 
  # but to me just leads to more indirection later when 
  # trying to read this. So I'd rather be explicit here
  # and have that be easier to follow.  my opinion subject to change.

  # Lane Rollovers
  ball_1_hit:     { score: 500 }
  ball_2_hit:     { score: 500 }
  ball_3_hit:     { score: 500 }
  ball_4_hit:     { score: 500 }
  ball_5_hit:     { score: 500 }
  
  # Outlanes
  ball_6_hit:     { score: 500 }
  ball_9_hit:     { score: 500 }
  ball_10_hit:    { score: 500 }
  ball_11_hit:    { score: 500 }
  
  # Standup Targets 
  #   NOTE: using switch direct so we can breakout ball tracking below
  pfs_standup_13_7_active:  { score: 500 }
  pfs_standup_12_15_active: { score: 500 }
  pfs_standup_14_8_active:  { score: 500 }

  # Slings
  pfs_sling_top_left_active:  { score: 10 }
  pfs_sling_top_right_active: { score: 10 }
  pfs_sling_left_active:      { score: 10 }
  pfs_sling_right_active:     { score: 10 }

  # Pop Bumpers
  pfs_popbumper_left_active:   { score: 100 * current_player.top_pop_multiplier }
  pfs_popbumper_middle_active: { score: 100 * current_player.mid_pop_multiplier }
  pfs_popbumper_right_active:  { score: 100 * current_player.top_pop_multiplier }

  # Saucers
  pfs_saucer_left_active:  { score: (100 * (5 - current_player.left_col_lit)) + (1000 * current_player.left_col_lit) }
  pfs_saucer_right_active: { score: (100 * (5 - current_player.right_col_lit)) + (1000 * current_player.right_col_lit) }

  # when top and bottom rows are complete, multipliers for pops increases
  top_row_complete: { top_pop_multiplier: { int: 10, action: set } }
  bot_row_complete: { mid_pop_multiplier: { int: 10, action: set } }

  # left and right column tracking
  left_col_one_hit:  { left_col_lit:  { int: 1, action: add } }
  right_col_one_hit: { right_col_lit: { int: 1, action: add } }

  # total balls hit (for bonus)
  all_balls_one_hit: { total_balls_collected: { int: 1, action: add } }

shot_profiles:
  # inverted on/off state for balls  
  sp_ball: { states: [{ name: one, show: my_ball}, { name: two, show: my_ball_inverted }] }
        
  # profile for lit specials
  special_profile: { advance_on_hit: false, states: [{ name: unlit, show: 'off' }, { name: lit, show: 'on' }] }

shots:
  # Lane Rollovers
  ball_1: { profile: sp_ball, switch: 'pfs_top_lane_rollover_1',                show_tokens: { l_on: 'pfl_top_lane_1',        l_off: 'pfl_tri_1' } }
  ball_2: { profile: sp_ball, switch: 'pfs_top_lane_rollover_2, pfs_inlane_2',  show_tokens: { l_on: 'pfl_top_lane_2, pfl_2', l_off: 'pfl_tri_2' } }
  ball_3: { profile: sp_ball, switch: 'pfs_top_lane_rollover_3, pfs_inlane_3',  show_tokens: { l_on: 'pfl_top_lane_3, pfl_3', l_off: 'pfl_tri_3' } }
  ball_4: { profile: sp_ball, switch: 'pfs_top_lane_rollover_4, pfs_outlane_4', show_tokens: { l_on: 'pfl_top_lane_4, pfl_4', l_off: 'pfl_tri_4' } }
  ball_5: { profile: sp_ball, switch: 'pfs_top_lane_rollover_5, pfs_outlane_5', show_tokens: { l_on: 'pfl_top_lane_5, pfl_5', l_off: 'pfl_tri_5' } }
  
  # Outlanes
  ball_6:  { profile: sp_ball, switch: pfs_6_rollover,  show_tokens: { l_on: pfl_6,  l_off: 'pfl_tri_6'  } }
  ball_9:  { profile: sp_ball, switch: pfs_9_rollover,  show_tokens: { l_on: pfl_9,  l_off: 'pfl_tri_9'  } }
  ball_10: { profile: sp_ball, switch: pfs_10_rollover, show_tokens: { l_on: pfl_10, l_off: 'pfl_tri_10' } }
  ball_11: { profile: sp_ball, switch: pfs_11_rollover, show_tokens: { l_on: pfl_11, l_off: 'pfl_tri_11' } }
  
  # Targets
  ball_7:  { profile: sp_ball, switch: pfs_standup_13_7,  show_tokens: { l_on: 'pfl_7',  l_off: 'pfl_tri_7'  } }
  ball_8:  { profile: sp_ball, switch: pfs_standup_14_8,  show_tokens: { l_on: 'pfl_8',  l_off: 'pfl_tri_8'  } }
  ball_12: { profile: sp_ball, switch: pfs_standup_12_15, show_tokens: { l_on: 'pfl_12', l_off: 'pfl_tri_12' } }
  ball_13: { profile: sp_ball, switch: pfs_standup_13_7,  show_tokens: { l_on: 'pfl_13', l_off: 'pfl_tri_13' } }
  ball_14: { profile: sp_ball, switch: pfs_standup_14_8,  show_tokens: { l_on: 'pfl_14', l_off: 'pfl_tri_14' } }
  ball_15: { profile: sp_ball, switch: pfs_standup_12_15, show_tokens: { l_on: 'pfl_15', l_off: 'pfl_tri_15' } }

  # Specials
  #   note: advance_events starts on right side because after all_balls_complete, 
  #   it will do one extra ball_active to move and we want it to start at the top.
  special_top: { profile: special_profile, switch: pfs_top_lane_rollover_1, show_tokens: { light: pfl_top_lane_special }                                  }
  special_l:   { profile: special_profile, switch: pfs_saucer_left,         show_tokens: { light: pfl_special_left }                                      } 
  special_r:   { profile: special_profile, switch: pfs_saucer_right,        show_tokens: { light: pfl_special_right }, advance_events: all_balls_complete }

  # Pop Bumper Lights (triggered by row completes)
  pop_top: { advance_events: top_row_complete, show_tokens: { light: 'pfl_popbumper_left, pfl_popbumper_right' } }
  pop_bot: { advance_events: bot_row_complete, show_tokens: { light: 'pfl_popbumper_middle' } }

  # Scored over 100,000 backbox light
  scored_over_100_thousand: { advance_events: 'player_score{value>=100000}', show_tokens: { light: bbl_100k } }

# Triangle groupings that give bonuses
shot_groups: 
  top_row:    { shots: 'ball_1,  ball_2,  ball_3,  ball_4,  ball_5'  } 
  bot_row:    { shots: 'ball_6,  ball_7,  ball_8,  ball_9'           }
  left_col:   { shots: 'ball_4,  ball_6,  ball_10, ball_13, ball_15' }
  right_col:  { shots: 'ball_5,  ball_9,  ball_11, ball_14, ball_15' }
  all_balls:  { shots: 'ball_1,  ball_2,  ball_3,  ball_4,  ball_5,
                        ball_6,  ball_7,  ball_8,  ball_9,  ball_10,
                        ball_11, ball_12, ball_13, ball_14, ball_15' }
  special_s:  { shots: 'special_top, special_l, special_r',
                rotate_right_events: sw_ball_active                  } 

# state 1 has some lights on and others off, state 2 inverts those lights.  
# allows for ball rollovers, and triangle center
shows: 
  my_ball:          [{ time: 0, lights: { (l_off): 'off', (l_on): 'on' } }]
  my_ball_inverted: [{ time: 0, lights: { (l_off): 'on',  (l_on): 'off'} }]

# Watch for events that trigger knocker
#   a) special shot hit
#   b) replay values reached (150,000, 180,000)
show_player:
  special_s_lit_hit:
    match_knocker:
      loops: 0
  replay_earned:
    match_knocker:
      loops: 0

# State machine that handles the 3 replay awards
state_machines:
  my_replay_states:
    persist_state: true
    debug: true
    states:
      start:
        label: Start state
      step1:
        label: Step one state
        events_when_started: replay_earned
      step2:
        label: Step two state
        events_when_started: replay_earned
      step3:
        label: Step three state
        events_when_started: replay_earned
    transitions:
      - source: start
        target: step1
        events: player_score{value>=500}
      - source: step1
        target: step2
        events: player_score{value>=800}
      - source: step2
        target: step3
        events: player_score{value>=1400}